# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-19 10:10
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import word.models


class Migration(migrations.Migration):

    dependencies = [
        ('language', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('word', '0006_word_translations'),
    ]

    operations = [
        migrations.CreateModel(
            name='BavarianWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=50)),
                ('upvotes', models.IntegerField(default=0)),
                ('downvotes', models.IntegerField(default=0)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('audio', models.FileField(blank=True, null=True, upload_to=word.models.audio_path)),
                ('status', models.CharField(choices=[('SUG', 'Suggested'), ('EVL', 'Evaluated'), ('CFR', 'Confirmed'), ('RMV', 'Removed')], max_length=50)),
                ('version', models.CharField(max_length=50)),
                ('desc', models.ManyToManyField(blank=True, to='word.Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForeignWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=50)),
                ('upvotes', models.IntegerField(default=0)),
                ('downvotes', models.IntegerField(default=0)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('audio', models.FileField(blank=True, null=True, upload_to=word.models.audio_path)),
                ('status', models.CharField(choices=[('SUG', 'Suggested'), ('EVL', 'Evaluated'), ('CFR', 'Confirmed'), ('RMV', 'Removed')], max_length=50)),
                ('version', models.CharField(max_length=50)),
                ('desc', models.ManyToManyField(blank=True, to='word.Description')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='language.Language')),
                ('tags', models.ManyToManyField(blank=True, to='word.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalForeignWord',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('word', models.CharField(max_length=50)),
                ('upvotes', models.IntegerField(default=0)),
                ('downvotes', models.IntegerField(default=0)),
                ('creation_date', models.DateField(blank=True, editable=False)),
                ('audio', models.TextField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('SUG', 'Suggested'), ('EVL', 'Evaluated'), ('CFR', 'Confirmed'), ('RMV', 'Removed')], max_length=50)),
                ('version', models.CharField(max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='language.Language')),
            ],
            options={
                'verbose_name': 'historical foreign word',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
        ),
        migrations.RenameModel(
            old_name='HistoricalWord',
            new_name='HistoricalBavarianWord',
        ),
        migrations.RemoveField(
            model_name='word',
            name='desc',
        ),
        migrations.RemoveField(
            model_name='word',
            name='language',
        ),
        migrations.RemoveField(
            model_name='word',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='word',
            name='translations',
        ),
        migrations.AlterModelOptions(
            name='historicalbavarianword',
            options={'get_latest_by': 'history_date', 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical bavarian word'},
        ),
        migrations.AlterField(
            model_name='translation',
            name='bavarian',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bavarian', to='word.BavarianWord'),
        ),
        migrations.AlterField(
            model_name='translation',
            name='foreign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foreign', to='word.ForeignWord'),
        ),
        migrations.DeleteModel(
            name='Word',
        ),
        migrations.AddField(
            model_name='bavarianword',
            name='foreign_translations',
            field=models.ManyToManyField(related_name='bavarian_translations', through='word.Translation', to='word.ForeignWord'),
        ),
        migrations.AddField(
            model_name='bavarianword',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='language.Language'),
        ),
        migrations.AddField(
            model_name='bavarianword',
            name='tags',
            field=models.ManyToManyField(blank=True, to='word.Tag'),
        ),
    ]
